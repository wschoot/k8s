---
- hosts: all
  become: true
  tasks:
    - name: Disable SELinux
      selinux:
        state: disabled

    - name: Enable password login
      lineinfile: 
        dest: '/etc/ssh/sshd_config' 
        regexp: "^#?PasswordAuthentication"
        line: "PasswordAuthentication yes"
      notify: restart sshd

    - name: Stop firewalld
      service: 
        name: firewalld
        state: stopped

    - name: Add repository
      yum_repository:
        name: kubernetes
        description: Kubernetes
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled: yes
        gpgcheck: yes
        repo_gpgcheck: yes
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: upgrade all packages
      yum:
        name: '*'
        state: latest
        update_cache : yes

    - name: Install alles wat met kube begint
      package: 
        name: "{{ item }}"
        state: installed
        update_cache: yes
      with_items:
        - kubelet 
        - kubeadm 
        - kubectl

    - name: Install docker
      package: 
        name: '{{ item }}'
        state: installed
      with_items:
        - docker
        - etcd
        - docker-distribution

    - name: Start kubelet
      service: 
        name: "{{ item }}" 
        state: started
        enabled: yes
      with_items:
        - kubelet
        - docker-distribution 
        - docker

    - name: Disable swapoff
      shell: swapoff -a

    - name: Disable swapoff permanently
      replace:
        path: /etc/fstab
        regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
        replace: '#\1\2\3swap\4'
        backup: yes

  handlers:
    - name: restart sshd
      service: 
        name: 'sshd'
        state: restarted
  


- hosts: master
  become: true
  tasks:
    - name: Configure .bashrc
      lineinfile:
        dest: /root/.bashrc
        line: "{{ item }}"
      with_items:
        - 'export KUBECONFIG=/etc/kubernetes/admin.conf'
        - 'source <(kubectl completion bash)'
        - 'alias k=kubectl'
        - 'complete -F __start_kubectl k'

    - command: kubeadm config images pull
    - command: kubeadm init --pod-network-cidr=10.244.0.0/16
    - command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml
    - command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
    - command: kubectl create clusterrolebinding --user system:serviceaccount:kube-system:default kube-system-cluster-admin --clusterrole cluster-admin
    - command: kubectl create clusterrolebinding kubernetes-dashboard --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard
    - command: kubectl apply -f ~vagrant/dashboard-adminuser.yaml
    - command: kubectl apply -f ~vagrant/dashboard-adminrole.yaml

    - name: Get join link
      command: kubeadm token create --print-join-command
      register: joinlink

# https://docs.ansible.com/ansible/latest/user_guide/playbooks_delegation.html

    - name: Join workers
      command: "{{ joinlink.stdout }}"
      delegate_to: "{{ item }}"
      with_items: "{{groups['nodes']}}"
        
    #- name: "Add K8S Token and Hash to dummy host"
    #  add_host:
    #    name:   "K8S_TOKEN_HOLDER"
    #    joinlink:  "{{ joinlink.stdout }}"
#
#- hosts: nodes
## SCope https://liquidat.wordpress.com/2017/09/13/howto-reference-ansible-variables-between-plays/
#  tasks:
#    - name: Get join link
#      command: "{{ hostvars['K8S_TOKEN_HOLDER']['joinlink'] }}"
